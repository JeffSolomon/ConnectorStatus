@model List<ConnectorStatus.Models.ConnectorBuildItem>
@{
    ViewBag.Title = "ConnectorStatusView";
    string filterLabel = (ViewBag.Toggle ? "Show" : "Hide" ) + " Completed Connectors";
}



<h2>Connector Status Tracker</h2>


@if (Model.Count > 0)
{
@Html.ActionLink(@filterLabel, "Index", new { showClosed = ViewBag.Toggle }, new { @class = "btn btn-primary", @style = "color:white" })

<div class="container">
    <table class="table table-striped" id="connectorStatusTable">
        <thead class="table-header-rotated">
            <tr>
                <th>Client</th>
                <th>Source</th>
                <th>Key</th>
                @foreach (ConnectorStatus.Models.ChildTicket.Stage stage in Enum.GetValues(typeof(ConnectorStatus.Models.ChildTicket.Stage)))
                {
                    <th class="rotate-45"><div><span>@ViewBag.StageLabels[stage]</span></div></th>
                }
                <th class="rotate-45"><div><span>Build Status</span></div></th>
            </tr>
        </thead>
        <tbody>
@foreach (var item in Model)
{
    string ticketKey = item.ParentTicket.Key;
    string ticketLink = "https://jira.wedostuffwell.com/browse/" + ticketKey;
    <tr>
        <td data-sortable="true">@Html.DisplayFor(modelItem => item.ParentTicket.Client)</td>
        <td>@Html.DisplayFor(modelItem => item.ParentTicket.Source)</td>
        <td nowrap><a href="@ticketLink" target="_blank">@ticketKey</a></td>
        @{
            foreach (ConnectorStatus.Models.ChildTicket.Stage stage in Enum.GetValues(typeof(ConnectorStatus.Models.ChildTicket.Stage)))
            {
                string status = "Unknown!";
                string color = "white";
                string thisChildLink = "https://jira.wedostuffwell.com/browse/";
                ConnectorStatus.Models.ChildTicket.Score score = ConnectorStatus.Models.ChildTicket.Score.Unassigned;
                if (item.StageColors.ContainsKey(stage))
                {
                    color = item.StageColors[stage].DisplayColor;
                    status = item.StageColors[stage].Status;
                    score = item.StageColors[stage].StageScore;
                    thisChildLink += item.StageColors[stage].Key;
                }
                if (score == ConnectorStatus.Models.ChildTicket.Score.Complete)
                {
                <td>
                    <g>
                        <a href="@thisChildLink" target="_blank">
                            <svg width="40" height="30">
                                <rect x="2.5" y="2.5" rx="5" ry="5" width="25" height="25" style="fill:lightgray;stroke:black;stroke-width:3;opacity:0.5;" />
                                <polyline points="3,12 12,22 30,5"
                                          style="fill:none;stroke:@color;stroke-width:4" />

                            </svg>
                        </a>
                    </g>            
                </td>
                }
                else if (score == ConnectorStatus.Models.ChildTicket.Score.InProgress)
                {
                    <td>
                        <g>
                            <a href="@thisChildLink" target="_blank">
                                <svg width="40" height="30">
                                    <rect x="2.5" y="2.5" rx="5" ry="5" width="25" height="25" style="fill:lightgray;stroke:black;stroke-width:3;opacity:0.5;" />
                                    <polygon points="10,7 22,15 10,22"style="fill:@color;stroke:@color;stroke-width:4;" />
                                </svg>
                             </a>
                        </g>
                    </td>
                }
                else if (score == ConnectorStatus.Models.ChildTicket.Score.OnHold)
                {
                    <td>
                        <a href="@thisChildLink" target="_blank">
                            <svg width="40" height="30">
                                <rect x="2.5" y="2.5" rx="5" ry="5" width="25" height="25" style="fill:@color;stroke:black;stroke-width:3;opacity:0.6;" />
                            </svg>
                          </a>
                    </td>
                }
                else
                {
                    <td>
                        <a href="@thisChildLink" target="_blank">
                            <svg width="40" height="30">
                                <rect x="2.5" y="2.5" rx="5" ry="5" width="25" height="25" style=" fill:lightgray;stroke:black;stroke-width:3;opacity:0.2;" />
                            </svg>
                        </a>
                     </td>
                }

            }
        }
         <td style="white-space:nowrap">@Html.DisplayFor(modelItem => item.ParentTicket.Status)</td>  
         <td style="white-space:nowrap">
             @using (Html.BeginForm("Comment", "ConnectorStatus", "", FormMethod.Post, new { @class = "form-inline" }))
             {
                @Html.TextBox("commentString", item.ParentTicket.Description, new { @class = "form-control" })
                @Html.Hidden("key", item.ParentTicket.Key)
                 bool toggle = ViewBag.Toggle;
                 @Html.Hidden("showClosed", !toggle)
                <input class="btn btn-primary" type="submit" value="Submit Comment" />
             }
         </td>
        
        
    </tr>
            }
               
        </tbody>
    </table>
    
</div>

            }
            else
            {
                <div class="alert alert-warning">
                    <p><strong>Uh oh! </strong><br />We don't have any tickets to show you! You probably entered an incorrect JIRA username or password. </p>
                </div>
                @Html.ActionLink("Try Again!", "Index","Home", null, new { @class = "btn btn-primary", @style = "color:white" })

            }

