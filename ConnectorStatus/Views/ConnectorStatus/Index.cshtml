@model List<ConnectorStatus.Models.ConnectorBuildItem>
@{
    ViewBag.Title = "ConnectorStatusView";
    string filterLabel = (ViewBag.Toggle ? "Show" : "Hide" ) + " Completed Connectors";
}



<h2>Connector Status Tracker</h2>


@if (Model.Count > 0)
{
@Html.ActionLink(@filterLabel, "Index", new { showClosed = ViewBag.Toggle }, new { @class = "btn btn-primary", @style = "color:white" })

<div class="container">
    <br />
    <br />
@using (Html.BeginForm("Comment", "ConnectorStatus", "", FormMethod.Post, new { @class = "form-inline" }))
{
    <table class="table table-striped" id="connectorStatusTable">
        <thead>
            <tr>
                <th data-sort="string" data-toggle="tooltip" title="Click to sort." data-placement="top" data-container="body">Client</th>
                <th data-sort="string" data-toggle="tooltip" title="Click to sort." data-placement="top" data-container="body">Source</th>
                <th>Due Date</th>
                @foreach (ConnectorStatus.Models.ChildTicket.Stage stage in Enum.GetValues(typeof(ConnectorStatus.Models.ChildTicket.Stage)))
                {
                    <th  data-sort="int" data-toggle="tooltip" title="@ViewBag.StageLabels[stage] - Click to sort." data-placement="top" data-container="body">@stage.ToString()</th>
                }
                <th><div><span>Status</span></div></th>
            </tr>
        </thead>
        <tbody>
@for (int i = 0; i < Model.Count; i++)
{
    var item = Model[i];
    string ticketKey = item.ParentTicket.Key;
    string ticketLink = "https://jira.arcadiasolutions.com/browse/" + ticketKey;
    string dt = item.ParentTicket.DueDate == null ? "" : ((DateTime)item.ParentTicket.DueDate).ToString("d");
    <tr>
        <td data-sortable="true">@Html.DisplayFor(modelItem => item.ParentTicket.Client)</td>
        <td><a href="@ticketLink" target="_blank">@Html.DisplayFor(modelItem => item.ParentTicket.Source)</a></td>
        <td nowrap>@dt</td>
        @{
            foreach (ConnectorStatus.Models.ChildTicket.Stage stage in Enum.GetValues(typeof(ConnectorStatus.Models.ChildTicket.Stage)))
            {
                string status = "Unknown!";
                string color = "white";
                string thisChildLink = "https://jira.arcadiasolutions.com/browse/";
                ConnectorStatus.Models.ChildTicket.Score score = ConnectorStatus.Models.ChildTicket.Score.Unassigned;
                if (item.StageColors.ContainsKey(stage))
                {
                    color = item.StageColors[stage].DisplayColor;
                    status = item.StageColors[stage].Status;
                    score = item.StageColors[stage].StageScore;
                    thisChildLink += item.StageColors[stage].Key;
                }
                if (score == ConnectorStatus.Models.ChildTicket.Score.Complete)
                {
                <td data-sort-value="3">
                    <g>
                        <a href="@thisChildLink" target="_blank" data-toggle="tooltip" title="@ViewBag.StageLabels[stage]" data-placement="right">
                            <svg width="40" height="30">
                                <rect x="2.5" y="2.5" rx="5" ry="5" width="25" height="25" style="fill:@color;stroke:black;stroke-width:3;opacity:0.7;" />
                                @*<polyline points="3,12 12,22 30,5"
                                          style="fill:none;stroke:@color;stroke-width:4" />*@

                            </svg>
                        </a>
                    </g>            
                </td>
                }
                else if (score == ConnectorStatus.Models.ChildTicket.Score.InProgress)
                {
                    <td data-sort-value="1">
                        <g>
                            <a href="@thisChildLink" target="_blank" data-toggle="tooltip" title="@ViewBag.StageLabels[stage]" data-placement="right">
                                <svg width="40" height="30">
                                    <polygon points="5,0 25,15 5,30"style="fill:@color;stroke:black;stroke-width:2;" />
                                </svg>
                             </a>
                        </g>
                    </td>
                }
                else if (score == ConnectorStatus.Models.ChildTicket.Score.OnHold)
                {
                    <td data-sort-value="2">
                        <a href="@thisChildLink" target="_blank" data-toggle="tooltip" title="@ViewBag.StageLabels[stage]" data-placement="right">
                            <svg width="40" height="30">
                                <rect x="2.5" y="2.5" rx="5" ry="5" width="25" height="25" style="fill:@color;stroke:black;stroke-width:3;opacity:0.7;" />
                            </svg>
                          </a>
                    </td>
                }
                else
                {
                    <td data-sort-value="4">
                        <a href="@thisChildLink" target="_blank" data-toggle="tooltip" title="@ViewBag.StageLabels[stage]" data-placement="right">
                            <svg width="40" height="30">
                                <rect x="2.5" y="2.5" rx="5" ry="5" width="25" height="25" style=" fill:lightgray;stroke:black;stroke-width:3;opacity:0.2;" />
                            </svg>
                        </a>
                     </td>
                }

            }
        }
         <td style="white-space:nowrap">@Html.DisplayFor(modelItem => item.ParentTicket.Status)</td>  
         <td style="white-space:nowrap"  data-toggle="tooltip" title="@item.ParentTicket.Description"  data-placement="bottom">@Html.TextBoxFor(m => Model[i].ParentTicket.Description, new { @class = "form-control" })
             @Html.HiddenFor(m => Model[i].ParentTicket.Key)
             @*@using (Html.BeginForm("Comment", "ConnectorStatus", "", FormMethod.Post, new { @class = "form-inline"}))
             {
                 @Html.TextBox("commentString", item.ParentTicket.Description, new { @class = "form-control" })
                 @Html.Hidden("key", item.ParentTicket.Key)
                 bool toggle = ViewBag.Toggle;
                 @Html.Hidden("showClosed", !toggle)
                <input class="btn btn-primary" type="submit" value="Submit Comment" />
             }*@
         </td>
        
        
    </tr>
            }
               
        </tbody>
    </table>
    <input id="submitComments" type="submit" class="btn btn-primary" style="float:right;" value="Submit All Comments" />
            }
</div>

            }
            else
            {
                <div class="alert alert-warning">
                    <p><strong>Uh oh! </strong><br />We don't have any tickets to show you! You probably entered an incorrect JIRA username or password. </p>
                </div>
                @Html.ActionLink("Try Again!", "Index","Home", null, new { @class = "btn btn-primary", @style = "color:white" })

            }

<script>
$(document).ready(function(){
    $('[data-toggle="tooltip"]').tooltip();
    $('#connectorStatusTable').stupidtable();
    $('#submitComments').click(function () {

        $(this).removeClass('btn-primary')
        $(this).addClass('btn-info');
        $(this).prop('value', 'Submitting Comments...');
        $('*').fadeTo(2, 0.9)
        $('#spinner').show();
    });
});
</script>