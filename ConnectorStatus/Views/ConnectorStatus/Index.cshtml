@model List<ConnectorStatus.Models.ConnectorBuildItem>
@{
    ViewBag.Title = "Connector Status";
}


 

@if (Model.Count > 0)
{

<div class="container">

    <div class="container" style="padding-top:10px;">
        <div class="row">
            <div class="col-md-3">
                <input id="visibleSearch" type="search" class="form-control" placeholder="Search" />
            </div>
            <div class="col-md-2">
                <div class="panel-group">
                    <div class="panel panel-default" style="float:left">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" href="#collapseClients">CLIENTS</a>
                            </h4>
                        </div>
                        <div id="collapseClients" class="panel-collapse collapse">
                            <div class="panel-body">
                                <div class="btn-group-vertical">
                                    @foreach (var client in Model.Select(m => m.ParentTicket.Client).Distinct())
                                    {
                                        <button type="button" class="btn btn-default select" data-toggle="button" value="@client">@client</button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div> 
                
            <div class="col-md-3">
                <div class="panel-group">
                    <!--style="max-width:20%; padding-bottom:20px; position: fixed; bottom:20%; left:1px;"-->
                    <div class="panel panel-default" style="float:left">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" href="#collapse1">LEGEND</a>
                            </h4>
                        </div>
                        <div id="collapse1" class="panel-collapse collapse">
                            <div class="panel-body">
                                <ul class="list-group">
                                    @foreach (var stage in ConnectorStatus.Models.BuildProcessConfig.StageColors)
                                    {
                                        <li class="list-group-item"><svg style="max-height:20px;max-width:25px;padding-right:5px;"><rect x="2.5" y="2.5" rx="2.5" ry="2.5" width="16" height="16" style="fill:@stage.Value;stroke:black;stroke-width:2;opacity:0.7;" /></svg>@System.Text.RegularExpressions.Regex.Replace(stage.Key.ToString(), "([a-z](?=[A-Z])|[A-Z](?=[A-Z][a-z]))", "$1 ")</li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>   
        </div>
    </div>


    <h2>CONNECTOR STATUS TRACKER</h2>


    

    
    

@using (Html.BeginForm("Comment", "ConnectorStatus", "", FormMethod.Post, new { @class = "form-inline" }))
{
    <table class="table" id="connectorStatusTable">
        <thead>
            <tr>
    <th style="text-align:left">Contract</th>
    <th style="text-align:left">Connector</th>

    @foreach (var stage in ConnectorStatus.Models.BuildProcessConfig.Stages)
    {
        <th class="rotate"><div><span>@stage.Value</span></div></th>
    }
            
      
            <th>Overall Status</th>
        </tr>
        </thead>
        <tbody>
@for (int i = 0; i < Model.Count; i++)
{
    var item = Model[i];
    string ticketKey = item.ParentTicket.Key;
    string ticketLink = "https://jira.arcadiasolutions.com/browse/" + ticketKey;
    string dt = item.ParentTicket.DueDate == null ? "" : ((DateTime)item.ParentTicket.DueDate).ToString("d");
    <tr>
        <td>@Html.DisplayFor(modelItem => item.ParentTicket.ContractID)</td>
        <td style="white-space:nowrap; text-align:left" data-sortable="true"><a href="@ticketLink" target="_blank">@Html.DisplayFor(modelItem => item.ParentTicket.Client) - @Html.DisplayFor(modelItem => item.ParentTicket.Source)</a></td>
        <!--<td><a href="@ticketLink" target="_blank">@Html.DisplayFor(modelItem => item.ParentTicket.Source)</a></td>-->
        
        @{
            foreach (var stage in ConnectorStatus.Models.BuildProcessConfig.Stages)
            {
                string status = "Unknown!";
                string color = "white";
                string thisChildLink = "https://jira.arcadiasolutions.com/browse/";
                ConnectorStatus.Models.BuildProcessConfig.StatusCode score = ConnectorStatus.Models.BuildProcessConfig.StatusCode.BackLog;
                string tooltipLabel;
                string tdType = "<td>";
                if (stage.Value == "Environment Build" || stage.Value == "Deliver to QA")
                { tdType = "phase-divider"; }
                if (item.StageColors.ContainsKey(stage.Value))
                {
                    color = item.StageColors[stage.Value].DisplayColor;
                    status = item.StageColors[stage.Value].Status;
                    score = item.StageColors[stage.Value].StageScore;
                    thisChildLink += item.StageColors[stage.Value].Key;
                    tooltipLabel = stage.Value + " <br><strong>" + status + "</strong>";
                }

                if (status == "Unknown!")
                {
                    <td>
                        <div style="max-height:3px;">
                            <a href="@thisChildLink" target="_blank" data-toggle="tooltip" title="@stage.Value (Ticket Missing!)" data-placement="right">
                                <i class="glyphicon glyphicon-exclamation-sign" style="font-size:24px;color:lightgray;padding-right:5px;vertical-align:central"></i>
                            </a>
                        </div>
                    </td>
                }
                else
                {
                    <td class="@tdType">
                        <div style="max-height:30px;">
                            <a href="@thisChildLink" target="_blank" data-toggle="tooltip" data-placement="bottom" data-html="true" title="@stage.Value <br> <strong>@status</strong>" data-placement="right">
                            <svg width="30" height="30">
                                <rect x="2.5" y="2.5" rx="5" ry="5" width="25" height="25" style="fill:@color;stroke:black;stroke-width:2;opacity:0.7;" />
                            </svg>
                          </a>
                        </div>
                    </td>
                }


            }
        }
         <td style="white-space:nowrap; padding-left: 10px;"  data-toggle="tooltip" title="@item.ParentTicket.Description"  data-placement="bottom">@Html.TextBoxFor(m => Model[i].ParentTicket.Description, new { @class = "form-control" })
             @Html.HiddenFor(m => Model[i].ParentTicket.Key)
         </td>
        
        
    </tr>
            }
               
        </tbody>
    </table>
    <input id="submitComments" type="submit" class="btn btn-default" style="position: fixed; bottom:2%; right:50%" value="Submit Comments" />
            }
</div>

            }
            else
            {
                <div class="alert alert-warning">
                    <p><strong>Uh oh! </strong><br />We don't have any tickets to show you! You probably entered an incorrect JIRA username or password. </p>
                </div>
                @Html.ActionLink("Try Again!", "Index","Home", null, new { @class = "btn btn-primary", @style = "color:white" })

            }

<script>
    $(document).ready(function () {

        $('[data-toggle="tooltip"]').tooltip();

        $('#connectorStatusTable').filterTable({
            minRows: 2
            , label: ""
            , filterExpression: "filterTableFindAny"
            , inputName: "searchText"
            , containerClass: "hidden"
        });

        $('#visibleSearch').keyup(function () {
            var filterTableSearch = $("input[name='searchText']");
            filterTableSearch.val(this.value);
            filterTableSearch.keyup();
            $('.select').removeClass('active');
        });

        
    });


</script>